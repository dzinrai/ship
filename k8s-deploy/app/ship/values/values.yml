environment: staging
namespace: app

deploys:
  - name: api
    repository: paralect/ship-api
    replicas: 1
    livenessProbe:
      path: /health
      port: 3001
      initialDelaySeconds: 3
      periodSeconds: 5
    configMountPath: /app/src/config/environment
    imagePullPolicy: Always
    env:
      - name: APP_ENV
        value: "staging"
    ports:
      - containerPort: 3001
        protocol: TCP

  - name: web
    repository: paralect/ship-web
    replicas: 1
    livenessProbe:
      path: /health
      port: 3002
      initialDelaySeconds: 3
      periodSeconds: 5
    configMountPath: /app/src/server/config/environment
    imagePullPolicy: Always
    env:
      - name: NODE_ENV
        value: "staging"
    ports:
      - containerPort: 3002
        protocol: TCP

  - name: landing
    repository: paralect/ship-landing
    replicas: 1
    livenessProbe:
      path: /health
      port: 3000
      initialDelaySeconds: 3
      periodSeconds: 5
    configMountPath: /app/src/server/config/environment
    imagePullPolicy: Always
    env:
      - name: APP_ENV
        value: "staging"
    ports:
      - containerPort: 3000
        protocol: TCP

  - name: redis
    repository: k8s.gcr.io/redis
    imageVersion: e2e
    replicas: 1
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 6379
        protocol: TCP
    resources:
      requests:
        cpu: 100m
        memory: 100Mi

services:
  - name: api
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 3001
  - name: web
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 3002
  - name: landing
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 3000
  - name: mongo
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 27017
        targetPort: 27017
    clusterIP: None
    selector:
      role: mongo
  - name: redis
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 6379
        targetPort: 6379
  - name: socket
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 8082
    selector:
      app: api

ingress:
  class: nginx
  customHttpErrors: 404,502
  defaultBackend: error-pages
  rules:
    - host: ship-app.paralect.com
      serviceName: web
      servicePort: 80
    - host: ship-api.paralect.com
      serviceName: api
      servicePort: 80
    - host: ship-demo.paralect.com
      serviceName: landing
      servicePort: 80
    - host: ship-socket.paralect.com
      serviceName: socket
      servicePort: 80

statefullSet:
  name: mongo
  replicas: 1
  terminationGracePeriodSeconds: 10
  image: mongo
  ports:
    - name: mongo
      hostPort: 27017
      containerPort: 27017
      protocol: TCP
  storage: 100Gi
